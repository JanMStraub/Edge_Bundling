// Loadable modules
//
// Generated by /Applications/ParaView/bin/vtkProcessXML-pv5.10
//
#ifndef ElevationFilter_server_manager_modules_data_h
#define ElevationFilter_server_manager_modules_data_h

#include <cstring>
#include <cassert>
#include <algorithm>


// From file /Users/jan/Google Drive/Programmieren/bachelor_thesis/PrototypePlugin/ElevationFilter/Plugin/ElevationFilters/MyElevationFilter.xml
static const char* const ElevationFilter_server_manager_modulesMyElevationFilterInterface0 =
"<ServerManagerConfiguration>\n"
"  <!-- This is the server manager configuration XML. It defines the interface to\n"
"       our new filter. As a rule of thumb, try to locate the configuration for\n"
"       a filter already in ParaView (in Servers/ServerManager/Resources/*.xml)\n"
"       that matches your filter and then model your xml on it -->\n"
"  <ProxyGroup name=\"filters\">\n"
"   <SourceProxy name=\"MyElevationFilter\" class=\"vtkMyElevationFilter\" label=\"MyElevation\">\n"
"     <Documentation\n"
"        long_help=\"Create point attribute array by projecting points onto an elevation vector.\"\n"
"        short_help=\"Create a point array representing elevation.\">\n"
"          The Elevation filter generates point scalar values for an input data\n"
"          set along a specified direction vector. The Input menu allows the user\n"
"          to select the data set to which this filter will be applied. The Low\n"
"          Point and High Point define a line onto which each point of the data\n"
"          set is projected. The minimum scalar value is associated with the Low\n"
"          Point, and the maximum scalar value is associated with the High Point.\n"
"          The scalar value for each point in the data set is determined by the\n"
"          location along the line to which that point projects.\n"
"\n"
"          The line can be specified interactively using the 3D line widget. See\n"
"          section 7.4 for more information about this widget.\n"
"     </Documentation>\n"
"     <InputProperty\n"
"        name=\"Input\"\n"
"        command=\"SetInputConnection\">\n"
"           <ProxyGroupDomain name=\"groups\">\n"
"             <Group name=\"sources\"/>\n"
"             <Group name=\"filters\"/>\n"
"           </ProxyGroupDomain>\n"
"           <DataTypeDomain name=\"input_type\">\n"
"             <DataType value=\"vtkDataSet\"/>\n"
"           </DataTypeDomain>\n"
"      </InputProperty>\n"
"\n"
"      <DoubleVectorProperty\n"
"         name=\"LowPoint\"\n"
"         label=\"Low Point\"\n"
"         command=\"SetLowPoint\"\n"
"         number_of_elements=\"3\"\n"
"         animateable=\"1\"\n"
"         default_values=\"0 0 0\" >\n"
"         <BoundsDomain name=\"range\" mode=\"normal\" default_mode=\"min\" >\n"
"           <RequiredProperties>\n"
"             <Property name=\"Input\" function=\"Input\" />\n"
"           </RequiredProperties>\n"
"         </BoundsDomain>\n"
"         <Documentation>\n"
"           Define one end of the line (small scalar values). Default is (0,0,0).\n"
"         </Documentation>\n"
"      </DoubleVectorProperty>\n"
"\n"
"      <DoubleVectorProperty\n"
"         name=\"HighPoint\"\n"
"         label=\"High Point\"\n"
"         command=\"SetHighPoint\"\n"
"         number_of_elements=\"3\"\n"
"         animateable=\"1\"\n"
"         default_values=\"0 0 1\" >\n"
"         <BoundsDomain name=\"range\" mode=\"normal\" default_mode=\"max\" >\n"
"           <RequiredProperties>\n"
"             <Property name=\"Input\" function=\"Input\" />\n"
"           </RequiredProperties>\n"
"         </BoundsDomain>\n"
"         <Documentation>\n"
"           Define other end of the line (large scalar values). Default is (0,0,1).\n"
"         </Documentation>\n"
"      </DoubleVectorProperty>\n"
"\n"
"      <PropertyGroup panel_widget=\"InteractiveLine\">\n"
"        <Property function=\"Point1WorldPosition\" name=\"LowPoint\" />\n"
"        <Property function=\"Point2WorldPosition\" name=\"HighPoint\" />\n"
"        <Property function=\"Input\" name=\"Input\" />\n"
"      </PropertyGroup>\n"
"   <!-- End MyElevationFilter -->\n"
"   </SourceProxy>\n"
" </ProxyGroup>\n"
"</ServerManagerConfiguration>\n"
"\n";
// Get single string
inline char* ElevationFilter_server_manager_modulesMyElevationFilterGetInterfaces()
{

  const size_t len0 = strlen(ElevationFilter_server_manager_modulesMyElevationFilterInterface0);
  size_t len = ( 0
    + len0 );
  char* res = new char[ len + 1];
  size_t offset = 0;
  std::copy(ElevationFilter_server_manager_modulesMyElevationFilterInterface0, ElevationFilter_server_manager_modulesMyElevationFilterInterface0 + len0, res + offset); offset += len0;
  assert(offset == len);
  res[offset] = 0;
  return res;
}



#endif
